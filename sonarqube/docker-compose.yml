# docker-compose up --force-recreate --build -d 

version: "3"

services:
  sonarqube:
    image: sonarqube:8-community
    container_name: sonarqube
    restart: always
    command: 
      - /bin/bash
      - -c
      - |
        sysctl -w vm.max_map_count=262144
        sysctl -w fs.file-max=65536
        ulimit -n 65536
        ulimit -u 4096
    environment:
      - SONARQUBE_JDBC_USERNAME=${PG_USER}
      - SONARQUBE_JDBC_PASSWORD=${PG_PASSWORD}
      - SONARQUBE_JDBC_URL=${SQ_DB_URL}
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=${Q_ES_BOOTSTRAP_CHECKS_DISABLE}
    ports:
      - ${SQ_UI_PORT}:9000
    volumes:
      - ${SQ_TEMP_PATH}:/opt/sonarqube/temp
      - ${SQ_DATA_PATH}:/opt/sonarqube/data
      - ${SQ_LOGS_PATH}:/opt/sonarqube/logs
      - ${SQ_EXTS_PATH}:/opt/sonarqube/extensions
    networks:
      - sonarqube
    depends_on:
      - db
      - es01
  db:
    image: postgres:13-alpine
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    volumes:
      - ${PG_PATH}:/var/lib/postgresql
      - ${PG_DATA}:/var/lib/postresql/data
    networks:
      - pg
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: ${ES1_NODE_NAME}
    restart: always
    environment:
      - node.name=${ES1_NODE_NAME}
      - cluster.name=${ES1_CLUS_NAME}
      - discovery.seed_hosts=${ES1_DISCOVERY}
      - cluster.initial_master_nodes=${ES1_CLUS_MAST}
      - bootstrap.memory_lock=${ES1_BOOT_MEM}
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ${ES1_DATA_PATH}:/usr/share/elasticsearch/data
    ports:
      - ${ES1_PATH}:9200
    networks:
      - elastic
  # es02:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
  #   container_name: ${ES2_NODE_NAME}
  #   environment:
  #     - node.name=${ES2_NODE_NAME}
  #     - cluster.name=${ES2_CLUS_NAME}
  #     - discovery.seed_hosts=${ES2_DISCOVERY}
  #     - cluster.initial_master_nodes=${ES2_CLUS_MAST}
  #     - bootstrap.memory_lock=${ES2_BOOT_MEM}
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - ${ES2_DATA_PATH}:/usr/share/elasticsearch/data
  #   networks:
  #     - elastic
  # es03:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
  #   container_name: ${ES3_NODE_NAME}
  #   environment:
  #     - node.name=${ES3_NODE_NAME}
  #     - cluster.name=${ES3_CLUS_NAME}
  #     - discovery.seed_hosts=${ES3_DISCOVERY}
  #     - cluster.initial_master_nodes=${ES3_CLUS_MAST}
  #     - bootstrap.memory_lock=${ES3_BOOT_MEM}
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - ${ES3_DATA_PATH}:/usr/share/elasticsearch/data
  #   networks:
  #     - elastic

networks:
  sonarqube:
    driver: bridge
  pg:
    driver: bridge
  elastic:
    driver: bridge