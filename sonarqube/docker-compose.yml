# docker-compose up --force-recreate --build -d
# docker-compose down

version: "3"

services:
  sq:
    image: sonarqube:latest
    container_name: sonarqube
    restart: unless-stopped
    environment:
      - SONARQUBE_JDBC_USERNAME=${PG_USER}
      - SONARQUBE_JDBC_PASSWORD=${PG_PASSWORD}
      - SONARQUBE_JDBC_URL=${SQ_DB_URL}
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=${SQ_ES_BOOTSTRAP_CHECKS_DISABLE}
    ports:
      - ${SQ_UI_PORT}:9000
    volumes:
      # - ${SQ_TEMP_PATH}:/opt/sonarqube/temp
      - ${SQ_DATA_PATH}:/opt/sonarqube/data
      # - ${SQ_LOGS_PATH}:/opt/sonarqube/logs
      - ${SQ_EXTS_PATH}:/opt/sonarqube/extensions
    # networks:
    #   - sonarqube
    links:
      - db
      - es01
    depends_on:
      - db
      - es01
  db:
    image: postgres:13-alpine
    container_name: db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    volumes:
      - ${PG_PATH}:/var/lib/postgresql
      - ${PG_DATA}:/var/lib/postresql/data
    # networks:
    #   - pg
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
    container_name: ${ES1_NODE_NAME}
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - node.name=es01
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ${ES1_DATA_PATH}:/usr/share/elasticsearch/data
    # ports:
      # - ${ES1_PATH}:9001
  #   networks:
  #     - elastic

# networks:
#   sonarqube:
#     driver: bridge
#   pg:
#     driver: bridge
#   elastic:
#     driver: bridge