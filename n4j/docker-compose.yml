# https://neo4j.com/docs/operations-manual/current/installation/docker/
# docker-compose -f docker-compose.yml up --force-recreate --build -d
# docker-compose -f docker-compose.yml down
# used tags: 4.2-enterprise
# GraphiQL plugin - https://github.com/neo4j-graphql/neo4j-graphql

version: "3.6"

services:
  n4j-server:
    container_name: n4j-42-e
    image: neo4j:4.2-enterprise
    volumes:
      - c:\dkr\neo4j\data:/var/lib/neo4j/data
      - c:\dkr\neo4j\logs:/logs
      - c:\dkr\neo4j\conf:/var/lib/neo4j/conf
      - c:\dkr\neo4j\plugins:/plugins
      - c:\dkr\neo4j\import:/var/lib/neo4j/import
      - c:\dkr\neo4j\certificates:/var/lib/neo4j/certificates
      - c:\dkr\neo4j\run:/var/lib/neo4j/run
    ports:
      - ${NEO4J_HTTP}:7474 # Http protocol - Used by the Neo4j Browser. Also used by REST API. (Development)
      - ${NEO4J_BOLT}:7687 # Bolt protocol - Used by Cypher Shell and by the Neo4j Browser.
      - ${NEO4J_HTTPS}:7473 # Https protocol - Used by the Neo4j Browser. Also used by REST API. (Production)
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH}
      NEO4J_ACCEPT_LICENSE_AGREEMENT: ${NEO4J_ACCEPT_LICENSE_AGREEMENT}
      NEO4J_dbms_security_procedures_unrestricted: ${NEO4J_dbms_security_procedures_unrestricted}
      NEO4J_dbms_security_procedures_whitelist: ${NEO4J_dbms_security_procedures_whitelist}
      NEO4J_apoc_export_file_enabled: ${NEO4J_apoc_export_file_enabled}
      NEO4J_apoc_import_file_enabled: ${NEO4J_apoc_import_file_enabled}
      NEO4J_apoc_import_file_use__neo4j__config: ${NEO4J_apoc_import_file_use__neo4j__config}
      NEO4JLABS_PLUGINS: ${NEO4JLABS_PLUGINS}
      NEO4J_dbms_memory_pagecache_size: ${NEO4J_dbms_memory_pagecache_size}
    restart: unless-stopped

  influxdb:
    # https://hub.docker.com/_/influxdb
    # https://github.com/influxdata/community-templates#templates
    image: influxdb:alpine
    container_name: influxDB_208_a
    hostname: influxdb
    restart: unless-stopped
    ports:
      - ${INFLUXDB_PORT}:8086
    volumes:
      - ${INFLUXDB_DATA_DIR}:/var/lib/influxdb2
      - ${INFLUXDB_CONF_DIR}:/etc/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_MODE: ${INFLUXDB_INIT_MODE}
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_INIT_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_INIT_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_INIT_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_INIT_BUCKET}
      DOCKER_INFLUXDB_INIT_RETENTION: ${INFLUXDB_INIT_RETENTION}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_INIT_ADMIN_TOKEN}
